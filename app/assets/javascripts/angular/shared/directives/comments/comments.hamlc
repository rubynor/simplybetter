#comments
  .comments-section
    %ul
      %li.comment-item(ng-repeat='comment in comments' ng-class='{ highlighted: highlight.comment && comment_id == comment.id }' id='{{comment.id}}' on-finish-render)
        .avatar
          %img(ng-src='{{ comment.gravatar_url }}')
        .content
          .meta
            %span.username
              {{ comment.creator_name }}
            on
            %span
              {{ comment.updated_at }}
          %form(ng-if='comment.$edit' name='editCommentForm' ng-submit='editCommentForm.$valid && updateComment(comment, editComment)' novalidate)
            %input(type='text' placeholder='Leave a comment...' ng-model='editComment.body' ng-focus='write = true' ng-class='{dirty: write}' required)
            %button.btn.submit-comment(type='submit' ng-class='{ disabled: !editCommentForm.$valid}') OK
            %div.cancel(ng-click='toggleEdit(comment)') cancel
          .comment-body(ng-if='!comment.$edit')
            {{ comment.body }}

        %options(item='comment' visible='isAdmin' edit='owner(comment) && !comment.$edit' togglevisible='toggleVisible(comment)' edititem='toggleEdit(comment)')
        .not-visible-overlay(ng-if='!comment.visible')
    .new-comment(ng-show='user')
      %form(name='commentForm' ng-submit='commentForm.$valid && save_comment(newComment)' novalidate)
        .error(ng-if='error_message')
          {{ error_message }}
        .success(ng-if='success_message')
          {{ success_message }}
        %input.comment-body(type='text' placeholder='Leave a comment...' ng-model='newComment' ng-focus='write = true' ng-class='{dirty: write}' required)
        %button.btn.submit-comment(type='submit' ng-class='{ disabled: !commentForm.$valid}') OK
